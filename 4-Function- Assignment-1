{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4452bcc-767b-4fac-8f6e-f1aea8bae98f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Crreate a class and function and list out the items in the list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e9299b07-9f2c-4cc1-b34f-5828d750b460",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sub-fields in AI are:\n",
      "Machine Learning\n",
      "Neutal Networks\n",
      "Vision\n",
      "Robotics\n",
      "Speech Processing\n",
      "Natural Language Processing\n"
     ]
    }
   ],
   "source": [
    "class SubFieldsInAI:\n",
    "    def Subfields():\n",
    "        print(\"Sub-fields in AI are:\")\n",
    "        print(\"Machine Learning\")\n",
    "        print(\"Neutal Networks\")\n",
    "        print(\"Vision\")\n",
    "        print(\"Robotics\")\n",
    "        print(\"Speech Processing\")\n",
    "        print(\"Natural Language Processing\")\n",
    "\n",
    "SubFieldsInAI.Subfields()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c620f94e-ad2c-4cb3-aa81-14dddb118756",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a function that checks whether the given number is odd or even"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "29b1e562-1221-4f0f-b56c-61af7789a368",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the number:  52452\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "52452 is an Even number\n"
     ]
    }
   ],
   "source": [
    "class OddEven:\n",
    "    def OddEven():\n",
    "        num= int(input(\"Enter the number: \"))\n",
    "        if num % 2 == 0:\n",
    "            print(num, \"is an Even number\")\n",
    "        else:\n",
    "            print(num, \"is an Odd number\")\n",
    "\n",
    "OddEven.OddEven()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "804ff6b9-7de7-48f8-961c-c2afa7d7ce3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a function that tels eligibility of mariage \n",
    "for male and female according to their age limit like 21 for male and 18 for female"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5b231bf1-a44a-4360-ad57-2a7ddb89bb27",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "your gender: male\n",
      "your age: 20\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NOT ELIGIBLE\n"
     ]
    }
   ],
   "source": [
    "class EligibilityFormarriage:\n",
    "    def Eligible():\n",
    "        gender = input(\"your gender:\")\n",
    "        age = int(input(\"your age:\"))\n",
    "        if (gender.lower() == \"male\" and age>=21) or (gender.lower() == \"female\" and age<=18):\n",
    "            print(\"ELIGIBLE\")\n",
    "        else:\n",
    "            print(\"NOT ELIGIBLE\")\n",
    "\n",
    "EligibilityFormarriage.Eligible()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aac3ede7-28f4-4216-a5c7-9de950e34133",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculate the percentage of your 10 th mark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4c19b3b8-6dbe-46c7-9cb4-8e0d11b1d2f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Subject1= 98\n",
      "Subject2= 87\n",
      "Subject3= 95\n",
      "Subject4= 93\n",
      "Subject5= 95\n",
      "Total: 468\n",
      "Percentage: 93.60000000000001\n"
     ]
    }
   ],
   "source": [
    "class FindPercent:\n",
    "    def percentage():\n",
    "        Subject1 = 98\n",
    "        Subject2 = 87\n",
    "        Subject3 = 95\n",
    "        Subject4 = 93\n",
    "        Subject5 = 95\n",
    "        Total = Subject1 + Subject2 + Subject3 + Subject4 + Subject5 \n",
    "        Percentage = (Total/500) * 100\n",
    "        print(\"Subject1=\", Subject1)\n",
    "        print(\"Subject2=\", Subject2)\n",
    "        print(\"Subject3=\", Subject3)\n",
    "        print(\"Subject4=\", Subject4)\n",
    "        print(\"Subject5=\", Subject5)\n",
    "        print(\"Total:\" , Total)\n",
    "        print(\"Percentage:\",(Percentage))\n",
    "\n",
    "FindPercent.percentage()\n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc6b0606-7643-484e-b99c-d50f3b17226d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Print ara and Perimeter of Triangle using Class and Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "851c027a-9574-4912-aba2-a6601aa3d875",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Height: 32\n",
      "Breadth: 34\n",
      "Area formula:(Height*Breadth)/2\n",
      "Area of Triangle: 544.0\n",
      "Height1: 2\n",
      "Height2: 4\n",
      "Breadth: 4\n",
      "Perimeter formula: Height1+Height2+Breadth\n",
      "Perimeter of Triangle: 10\n"
     ]
    }
   ],
   "source": [
    "class Triangle:\n",
    "    def triangle():\n",
    "        #Calculation of Area\n",
    "        Height = 32\n",
    "        Breadth = 34\n",
    "        print(\"Height:\", Height)\n",
    "        print(\"Breadth:\", Breadth)\n",
    "        print(\"Area formula:(Height*Breadth)/2\")\n",
    "        Area = (Height*Breadth)/2\n",
    "        print(\"Area of Triangle:\", Area)\n",
    "\n",
    "        #Calculation of Perimeter\n",
    "        Height1 = 2\n",
    "        Height2 = 4\n",
    "        Breadth = 4\n",
    "        print(\"Height1:\", Height1)\n",
    "        print(\"Height2:\", Height2)\n",
    "        print(\"Breadth:\", Breadth)\n",
    "        print(\"Perimeter formula: Height1+Height2+Breadth\")\n",
    "        Perimeter = Height1 + Height2 + Breadth\n",
    "        print(\"Perimeter of Triangle:\", Perimeter)\n",
    "\n",
    "Triangle.triangle()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "928e80b0-1c2a-4349-a8a0-16b2f67cec8d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
